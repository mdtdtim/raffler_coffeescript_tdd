// Generated by CoffeeScript 1.6.3
describe('Raffler Class', function() {
  it("(the class) should exist", function() {
    return expect(Raffler).toBeDefined();
  });
  it("(the model) should exist", function() {
    return expect(Raffler.Models.Entry).toBeDefined();
  });
  it("(the collection) should exist", function() {
    return expect(Raffler.Collections.Entries).toBeDefined();
  });
  describe("Default values test", function() {
    var testperson;
    testperson = new Raffler.Models.Entry;
    it("should set the default value of winner to false", function() {
      return expect(testperson.attributes.winner).toEqual(false);
    });
    return it("should set the default value of name to blank", function() {
      return expect(testperson.attributes.name).toEqual('');
    });
  });
  describe("Adding an entry", function() {
    it("should increase the number of items in the collection by one", function() {
      var count, count2;
      this.collection = new Raffler.Collections.Entries();
      this.collection.fetch();
      count = this.collection.length;
      this.collection.create({
        name: 'Tim'
      });
      this.collection.fetch();
      count2 = this.collection.length;
      return expect(count2).toEqual(count + 1);
    });
    return it("should render the new number of items on the page", function() {
      var count3;
      this.collection = new Raffler.Collections.Entries();
      this.collection.fetch();
      count3 = this.collection.length - 1;
      return expect($(entry_table).children().length).toEqual(count3);
    });
  });
  describe("clearing all winners", function() {
    return it("should clear all previous winners", function() {
      $(reset).trigger('click');
      this.collection = new Raffler.Collections.Entries();
      this.collection.fetch();
      return expect(this.collection.models.winner).not.toEqual(true);
    });
  });
  return describe("Drawing a winner", function() {
    return it("should randomly select an entry and set the value of winner to true", function() {
      $(draw).trigger('click');
      this.collection = new Raffler.Collections.Entries();
      this.collection.fetch();
      return expect(this.collection.models.winner).not.toEqual(false);
    });
  });
});
